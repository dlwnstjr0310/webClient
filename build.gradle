plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.web'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}


bootJar {
    enabled = true
    archiveFileName = 'webClient-api.jar'
}

dependencies {

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.0.3'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

    // webflux
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '3.2.0'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.boot:spring-boot-starter-aop"

    implementation 'mysql:mysql-connector-java:8.0.32'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation "com.zaxxer:HikariCP"
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.slf4j:slf4j-simple:1.7.30"

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.springframework.security:spring-security-test'
}


def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}


tasks.register('zip', Zip) {
    dependsOn bootJar
    archiveFileName = 'refactor-api.zip'
    from 'build/libs'
    from(projectDir) {
        include '.ebextensions/**'
        include '.platform/**'
        include 'Procfile'
    }

    destinationDirectory = file("${buildDir}")
}